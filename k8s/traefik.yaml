---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
- kind: ServiceAccount
  name: traefik-ingress-controller
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
---
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
  labels:
    k8s-app: traefik-ingress-lb
spec:
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 60
      containers:
      - image: traefik:v1.7.18
        name: traefik-ingress-lb
        env:
          - name: DO_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                name: do-secret
                key: DO_AUTH_TOKEN
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /acme
          name: acme
        ports:
        - name: http
          containerPort: 80
          hostPort: 80
        - name: https
          containerPort: 443
          hostPort: 443
        securityContext:
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        args:
        - --api
        - --configfile=/config/traefik.toml
      volumes:
      - name: config
        configMap:
          name: traefik
      - name: acme
        persistentVolumeClaim:
          claimName: acme-pvc
---
kind: Service
apiVersion: v1
metadata:
  name: traefik-ingress-service
  namespace: kube-system
spec:
  selector:
    k8s-app: traefik-ingress-lb
  ports:
    - protocol: TCP
      port: 80
      name: web
    - protocol: TCP
      port: 443
      name: https
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik
  namespace: kube-system
  labels:
    app: traefik
data:
  traefik.toml: |
    # traefik.toml
    logLevel = "INFO"
    defaultEntryPoints = ["http","https"]
    [entryPoints]
      [entryPoints.http]
      address = ":80"
        # You can disable this if you do not want http to redirect to https
      [entryPoints.http.redirect]
      entryPoint = "https"
      [entryPoints.https]
      address = ":443"
      compress = true
        [entryPoints.https.tls]
          [[entryPoints.https.tls.certificates]]
          CertFile = "/ssl/tls.crt"
          KeyFile = "/ssl/tls.key"
    [kubernetes]
    [acme]
    # Change the email to fit your needs
    email = "register@iteam.se"
    storage = "/acme/acme.json"
    entryPoint = "https"
    onHostRule = true
    # Change to using the PROD lets encrypt directory
    caServer = "https://acme-v02.api.letsencrypt.org/directory"
    # caServer = "https://acme-staging-v02.api.letsencrypt.org/directory"
      [acme.dnsChallenge]
      provider = "digitalocean"
    [[acme.domains]]
      # Change this to fit your needs
      main = "*.digitala-kvitton.se"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: acme-pvc
  namespace: kube-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: do-block-storage
